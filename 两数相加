struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2)
{
    int a = 0;
    struct ListNode *temp1 = l1;
    struct ListNode *temp2 = l2;
    struct ListNode *head = NULL;
    while(temp1||temp2)
    {
        struct ListNode *l3 = (struct ListNode*)malloc(sizeof(struct ListNode));
        struct ListNode *temp3 = head;
        if(temp1->val + temp2->val >= 10)
        {
            l3-> val = (temp1->val + temp2->val) - 10;
            l3 -> next = NULL;
            if(l3!=NULL)
            {
                l3->next=head;
                head = l3;
            }
            while(temp3)
            {
                temp3 = temp3->next;
            }
            temp3 = l3;
            a++;
        }else l3-> val = temp1->val + temp2->val;
            l3 -> next = NULL;
                if(l3!=NULL)
                {
                    l3->next=head;
                    head =l3;
                }
                while(temp3)
                {
                    temp3 = temp3->next;
                }
                temp3 = l3;
                
        if(temp1 == NULL)
        {        
        temp2 = temp2->next;}
        else if(temp2 == NULL)
        {        
        temp1 = temp1->next;}
        else {
            temp1=temp1->next;
            temp2=temp2->next;
        }
 
    }
    return head;
}


//上面是错误示范，自己写的 

struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2)
{
    int carry = 0;
    struct ListNode *temp1 = l1;
    struct ListNode *temp2 = l2;
    struct ListNode *head = NULL;
    struct ListNode *prev = NULL;

    while(temp1 || temp2 || carry)
    {
        int val1 = temp1 ? temp1->val : 0;
        int val2 = temp2 ? temp2->val : 0;
        int sum = val1 + val2 + carry;

        carry = sum / 10;
        struct ListNode *newNode = (struct ListNode*)malloc(sizeof(struct ListNode));
        newNode->val = sum % 10;
        newNode->next = NULL;

        if (prev == NULL)
        {
            head = newNode;
        }
        else
        {
            prev->next = newNode;
        }

        prev = newNode;

        if (temp1 != NULL)
        {
            temp1 = temp1->next;
        }

        if (temp2 != NULL)
        {
            temp2 = temp2->next;
        }
    }

    return head;
}
//这是chatgpt写的正确答案
