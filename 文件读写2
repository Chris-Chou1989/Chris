//
首先从键盘输入n名学生的信息：学号（8位整数）、姓名（20个字符）、性别（1个字符）3门课的成绩（2位小数）。然后计算每个学生的平均成绩（2位小数），总成绩（2位小数）信息，然后把学生的信息存入工程文件夹下的student.txt文件，注意，文件中每个学生的信息存放一行，各信息间用1个空格分割。注意，由于学生的姓名中包含空格，因此在读取时不能用fscanf（fp,"%s",...)来完成输入，用fgets时需要确定字符串的长度，因为所有信息都放在一行，因此用姓名的最大值20也不可以，只能在存储信息时记录姓名的长度，这样在读取时就可以先获取姓名长度，然后用此长度去控制fgets中读取的长度。因此，student.txt文件中学生信息格式如下：
学号 姓名长度 姓名 性别 各门课程成绩 平均成绩 总成绩

input

输入数据有1组，第一行是一个整数n，然后是n行学生信息。

output

将n个学生的信息存入student.txt文件，数据可以参照：

20140101 Li Ming M 85.00 90.00 92.00 

20140202 Zhao Li F 98.00 78.00 88.00 

20140015 Lu Yao M 89.40 86.50 88.00

20140013 Qiao En M .50 85.60 78.50 

20140404 Tian Ya M 88.50 68.60 94.00

#include <stdio.h>
#include <string.h>  // 用于处理字符串的库函数

#define MAX_NAME_LEN 20    // 学生姓名的最大长度
#define MAX_STU_NUM 100    // 最大学生数

typedef struct {
    int id;                 // 学号
    char name[MAX_NAME_LEN+1];  // 姓名
    char gender;            // 性别
    float scores[3];        // 3门课程成绩
    float average;          // 平均成绩
    float total;            // 总成绩
} Student;  // 学生结构体

int main() {
    int n;                  // 学生数
    Student students[MAX_STU_NUM];   // 学生数组 
    FILE *fp;  // 文件指针

    printf("请输入学生数：");
    scanf("%d", &n);
    getchar();             // 去除输入缓存中的回车符

    // 读入学生信息
    for (int i = 0; i < n; i++) {
        printf("请输入第%d个学生的信息：\n", i+1);
        printf("学号：");
        scanf("%d", &students[i].id);
        getchar();         // 去除输入缓存中的回车符
        printf("姓名：");
        fgets(students[i].name, MAX_NAME_LEN+1, stdin);  // 读取字符串，最多读取 MAX_NAME_LEN+1 个字符（包括 \0）
        students[i].name[strcspn(students[i].name, "\n")] = '\0';  // 去除字符串末尾的换行符
        printf("性别：");
        scanf("%c", &students[i].gender);
        printf("3门课程成绩：");
        for (int j = 0; j < 3; j++) {
            scanf("%f", &students[i].scores[j]);
        }
        students[i].average = (students[i].scores[0] + students[i].scores[1] + students[i].scores[2]) / 3;  // 计算平均成绩
        students[i].total = students[i].scores[0] + students[i].scores[1] + students[i].scores[2];  // 计算总成绩
        getchar();         // 去除输入缓存中的回车符
    }

    // 将学生信息写入文件
    fp = fopen("student.txt", "w");  // 打开文件，以写入方式
    if (fp == NULL) {  // 判断文件是否打开成功
        printf("无法打开文件\n");
        return 1;
    }
    for (int i = 0; i < n; i++) {
        // 将学生信息写入文件
        // %d 表示整数，%s 表示字符串，%c 表示字符，%.2f 表示保留2位小数的浮点数
        fprintf(fp, "%d %d %s %c %.2f %.2f %.2f\n", students[i].id, strlen(students[i].name), students[i].name, students[i].gender, students[i].scores[0], students[i].scores[1],
